// Test function
function helloWorld() {
    console.log("Hello World, this is your nebula-logger-nodejs package.");
}

//sReturn a string with all the querable fields on the Log__c object
const log = () => {
  return 'SELECT Id, OwnerId, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, ApiReleaseNumber__c, ApiReleaseVersion__c, ApiVersion__c, ClosedBy__c, ClosedDate__c, Comments__c, IsClosed__c, IsResolved__c, Issue__c, Locale__c, LogEntriesSummary__c, LogRetentionDate__c, LoggedByUsernameLink__c, LoggedByUsername__c, LoggedBy__c, LoggerVersionNumber__c, LoginApplication__c, LoginBrowser__c, LoginDomain__c, LoginHistoryId__c, LoginPlatform__c, LoginType__c, LogoutUrl__c, NetworkId__c, NetworkLoginUrl__c, NetworkLogoutUrl__c, NetworkName__c, NetworkSelfRegistrationUrl__c, NetworkUrlPathPrefix__c, OrganizationDomainUrl__c, OrganizationEnvironmentType__c, OrganizationId__c, OrganizationInstanceName__c, OrganizationInstanceReleaseCycle__c, OrganizationName__c, OrganizationNamespacePrefix__c, OrganizationType__c, ParentLog__c, Priority__c, ProfileId__c, ProfileLink__c, ProfileName__c, Scenario__c, SessionId__c, SessionSecurityLevel__c, SessionType__c, SourceIp__c, Status__c, SystemModeSummary__c, SystemMode__c, ThemeDisplayed__c, TimeZoneId__c, TimeZoneName__c, TotalLogEntries__c, TransactionId__c, UserLicenseDefinitionKey__c, UserLicenseId__c, UserLicenseName__c, UserLoggingLevelOrdinal__c, UserLoggingLevel__c, UserRoleId__c, UserRoleLink__c, UserRoleName__c, UserType__c, WasLoggedByCurrentUser__c, EndTime__c, MaxLogEntryLoggingLevelOrdinal__c, StartTime__c, TotalDEBUGLogEntries__c, TotalERRORLogEntries__c, TotalFINELogEntries__c, TotalFINERLogEntries__c, TotalFINESTLogEntries__c, TotalINFOLogEntries__c, TotalLimitsCpuTimeUsed__c, TotalWARNLogEntries__c FROM Log__c';
};

const logEntry = () => {
  return 'SELECT Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, Nebula__Log__c, Nebula__DatabaseResultCollectionType__c, Nebula__DatabaseResultJson__c, Nebula__DatabaseResultType__c, Nebula__EpochTimestamp__c, Nebula__ExceptionMessage__c, Nebula__ExceptionStackTrace__c, Nebula__ExceptionType__c, Nebula__HasDatabaseResult__c, Nebula__HasExceptionStackTrace__c, Nebula__HasException__c, Nebula__HasRecordId__c, Nebula__HasRecordJson__c, Nebula__HasStackTrace__c, Nebula__LimitsAggregateQueriesMax__c, Nebula__LimitsAggregateQueriesUsed__c, Nebula__LimitsAggregateQueries__c, Nebula__LimitsAsyncCallsMax__c, Nebula__LimitsAsyncCallsUsed__c, Nebula__LimitsAsyncCalls__c, Nebula__LimitsCalloutsMax__c, Nebula__LimitsCalloutsUsed__c, Nebula__LimitsCallouts__c, Nebula__LimitsCpuTimeMax__c, Nebula__LimitsCpuTimeUsed__c, Nebula__LimitsCpuTime__c, Nebula__LimitsDmlRowsMax__c, Nebula__LimitsDmlRowsUsed__c, Nebula__LimitsDmlRows__c, Nebula__LimitsDmlStatementsMax__c, Nebula__LimitsDmlStatementsUsed__c, Nebula__LimitsDmlStatements__c, Nebula__LimitsEmailInvocationsMax__c, Nebula__LimitsEmailInvocationsUsed__c, Nebula__LimitsEmailInvocations__c, Nebula__LimitsFutureCallsMax__c, Nebula__LimitsFutureCallsUsed__c, Nebula__LimitsFutureCalls__c, Nebula__LimitsHeapSizeMax__c, Nebula__LimitsHeapSizeUsed__c, Nebula__LimitsHeapSize__c, Nebula__LimitsMobilePushApexCallsMax__c, Nebula__LimitsMobilePushApexCallsUsed__c, Nebula__LimitsMobilePushApexCalls__c, Nebula__LimitsQueueableJobsMax__c, Nebula__LimitsQueueableJobsUsed__c, Nebula__LimitsQueueableJobs__c, Nebula__LimitsSoqlQueriesMax__c, Nebula__LimitsSoqlQueriesUsed__c, Nebula__LimitsSoqlQueries__c, Nebula__LimitsSoqlQueryLocatorRowsMax__c, Nebula__LimitsSoqlQueryLocatorRowsUsed__c, Nebula__LimitsSoqlQueryLocatorRows__c, Nebula__LimitsSoqlQueryRowsMax__c, Nebula__LimitsSoqlQueryRowsUsed__c, Nebula__LimitsSoqlQueryRows__c, Nebula__LimitsSoslSearchesMax__c, Nebula__LimitsSoslSearchesUsed__c, Nebula__LimitsSoslSearches__c, Nebula__LogTransactionId__c, Nebula__LoggedByUsernameLink__c, Nebula__LoggingLevelOrdinal__c, Nebula__LoggingLevelWithImage__c, Nebula__LoggingLevel__c, Nebula__MessageTruncated__c, Nebula__Message__c, Nebula__OriginLocation__c, Nebula__OriginType__c, Nebula__Origin__c, Nebula__RecordCollectionType__c, Nebula__RecordDetailedLink__c, Nebula__RecordId__c, Nebula__RecordJson__c, Nebula__RecordLink__c, Nebula__RecordName__c, Nebula__RecordSObjectClassification__c, Nebula__RecordSObjectTypeNamespace__c, Nebula__RecordSObjectType__c, Nebula__StackTrace__c, Nebula__Timestamp__c, Nebula__TransactionEntryNumber__c, Nebula__TriggerIsExecuting__c, Nebula__TriggerOperationType__c, Nebula__TriggerSObjectType__c, Nebula__Trigger__c FROM Nebula__LogEntry__c';
};

const logEntryEvent = () => {
  return 'SELECT Id, ReplayId, CreatedDate, CreatedById, EventUuid, ApiVersion__c, ComponentType__c, DatabaseResultCollectionType__c, DatabaseResultJson__c, DatabaseResultType__c, EpochTimestamp__c, ExceptionMessage__c, ExceptionStackTrace__c, ExceptionType__c, LimitsAggregateQueriesMax__c, LimitsAggregateQueriesUsed__c, LimitsAggregateQueryMax__c, LimitsAsyncCallsMax__c, LimitsAsyncCallsUsed__c, LimitsCalloutsMax__c, LimitsCalloutsUsed__c, LimitsCpuTimeMax__c, LimitsCpuTimeUsed__c, LimitsDmlRowsMax__c, LimitsDmlRowsUsed__c, LimitsDmlStatementsMax__c, LimitsDmlStatementsUsed__c, LimitsEmailInvocationsMax__c, LimitsEmailInvocationsUsed__c, LimitsFutureCallsMax__c, LimitsFutureCallsUsed__c, LimitsHeapSizeMax__c, LimitsHeapSizeUsed__c, LimitsMobilePushApexCallsMax__c, LimitsMobilePushApexCallsUsed__c, LimitsPublishImmediateDmlStatementsMax__c, LimitsPublishImmediateDmlStatementsUsed__c, LimitsQueueableJobsMax__c, LimitsQueueableJobsUsed__c, LimitsSoqlQueriesMax__c, LimitsSoqlQueriesUsed__c, LimitsSoqlQueryLocatorRowsMax__c, LimitsSoqlQueryLocatorRowsUsed__c, LimitsSoqlQueryRowsMax__c, LimitsSoqlQueryRowsUsed__c, LimitsSoslSearchesMax__c, LimitsSoslSearchesUsed__c, Locale__c, LoggedById__c, LoggedByUsername__c, LoggerVersionNumber__c, LoggingLevelOrdinal__c, LoggingLevel__c, LoginApplication__c, LoginBrowser__c, LoginDomain__c, LoginHistoryId__c, LoginPlatform__c, LoginType__c, LogoutUrl__c, MessageMasked__c, MessageTruncated__c, Message__c, NetworkId__c, NetworkLoginUrl__c, NetworkLogoutUrl__c, NetworkName__c, NetworkSelfRegistrationUrl__c, NetworkUrlPathPrefix__c, OrganizationDomainUrl__c, OrganizationEnvironmentType__c, OrganizationId__c, OrganizationInstanceName__c, OrganizationName__c, OrganizationNamespacePrefix__c, OrganizationType__c, OriginLocation__c, OriginType__c, ParentLogTransactionId__c, ProfileId__c, ProfileName__c, RecordCollectionType__c, RecordId__c, RecordJsonMasked__c, RecordJson__c, RecordSObjectClassification__c, RecordSObjectTypeNamespace__c, RecordSObjectType__c, Scenario__c, SessionId__c, SessionSecurityLevel__c, SessionType__c, SourceIp__c, StackTrace__c, SystemMode__c, Tags__c, ThemeDisplayed__c, TimeZoneId__c, TimeZoneName__c, TimestampString__c, Timestamp__c, Topics__c, TransactionEntryNumber__c, TransactionId__c, TriggerIsExecuting__c, TriggerOperationType__c, TriggerSObjectType__c, UserLicenseDefinitionKey__c, UserLicenseId__c, UserLicenseName__c, UserLoggingLevelOrdinal__c, UserLoggingLevel__c, UserRoleId__c, UserRoleName__c, UserType__c FROM LogEntryEvent__e';
}

module.exports = {
  helloWorld,
  log,
  logEntry,
  logEntryEvent
}